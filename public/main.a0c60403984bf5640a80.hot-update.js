/*! For license information please see main.a0c60403984bf5640a80.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatemyth("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),n=a.n(s),i=a("./app/components/Preloader.js"),o=a("./app/pages/About/index.js"),d=a("./app/pages/Myths/index.js"),p=a("./app/pages/Home/index.js"),r=a("./app/pages/Post/index.js"),h=a("./app/pages/Detail/index.js"),l=a("./app/pages/Journal/index.js");new class{constructor(){this.createPreloader(),this.createContent(),this.createPages(),this.addListeners,this.addLinkListeners(),this.update()}createPreloader(){this.preloader=new i.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new o.default,detail:new h.default,home:new p.default,journal:new l.default,myths:new d.default,post:new r.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.page.show(),console.log("Preloaded!")}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),a=document.createElement("div");a.innerHTML=e;const s=a.querySelector(".content");this.template=s.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=s.innerHTML,this.page=this.pages[this.template],this.page.create(),this.page.show(),this.addLinkListeners()}else console.log("Error")}update(){this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:a}=e;this.onChange(a),console.log(t,a)}}))}}}},(function(e){e.h=()=>"b3ac5916f4e6b6916174"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hMGM2MDQwMzk4NGJmNTY0MGE4MC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cVhBOEdBLElBakdBLE1BQ0VBLGNBQ0VDLEtBQUtDLGtCQUNMRCxLQUFLRSxnQkFDTEYsS0FBS0csY0FFTEgsS0FBS0ksYUFDTEosS0FBS0ssbUJBRUxMLEtBQUtNLFNBR1BMLGtCQUNFRCxLQUFLTyxVQUFZLElBQUlDLEVBQUFBLFFBQ3JCUixLQUFLTyxVQUFVRSxLQUFLLFlBQWFULEtBQUtVLFlBQVlDLEtBQUtYLE9BR3pERSxnQkFDRUYsS0FBS1ksUUFBVUMsU0FBU0MsY0FBYyxZQUN0Q2QsS0FBS2UsU0FBV2YsS0FBS1ksUUFBUUksYUFBYSxpQkFHNUNiLGNBQ0VILEtBQUtpQixNQUFRLENBQ1hDLE1BQU8sSUFBSUMsRUFBQUEsUUFDWEMsT0FBUSxJQUFJQyxFQUFBQSxRQUNaQyxLQUFNLElBQUlDLEVBQUFBLFFBQ1ZDLFFBQVMsSUFBSUMsRUFBQUEsUUFDYkMsTUFBTyxJQUFJQyxFQUFBQSxRQUNYQyxLQUFNLElBQUlDLEVBQUFBLFNBR1o3QixLQUFLOEIsS0FBTzlCLEtBQUtpQixNQUFNakIsS0FBS2UsVUFDNUJmLEtBQUs4QixLQUFLQyxTQUdackIsY0FDRVYsS0FBS08sVUFBVXlCLFVBQ2ZoQyxLQUFLOEIsS0FBS0csT0FDVkMsUUFBUUMsSUFBSSxjQUdBLGVBQUVDLFNBRVJwQyxLQUFLOEIsS0FBS08sT0FFaEIsTUFBTUMsUUFBZ0JDLE9BQU9DLE1BQU1KLEdBRW5DLEdBQXVCLE1BQW5CRSxFQUFRRyxPQUFnQixDQUMxQixNQUFNQyxRQUFhSixFQUFRSyxPQUNyQkMsRUFBTS9CLFNBQVNnQyxjQUFjLE9BRW5DRCxFQUFJRSxVQUFZSixFQUVoQixNQUFNSyxFQUFhSCxFQUFJOUIsY0FBYyxZQUVyQ2QsS0FBS2UsU0FBV2dDLEVBQVcvQixhQUFhLGlCQUV4Q2hCLEtBQUtZLFFBQVFvQyxhQUFhLGdCQUFpQmhELEtBQUtlLFVBQ2hEZixLQUFLWSxRQUFRa0MsVUFBWUMsRUFBV0QsVUFFcEM5QyxLQUFLOEIsS0FBTzlCLEtBQUtpQixNQUFNakIsS0FBS2UsVUFDNUJmLEtBQUs4QixLQUFLQyxTQUNWL0IsS0FBSzhCLEtBQUtHLE9BRVZqQyxLQUFLSyx3QkFFTDZCLFFBQVFDLElBQUksU0FLaEI3QixTQUNPTixLQUFLOEIsTUFBUTlCLEtBQUs4QixLQUFLeEIsUUFDMUJOLEtBQUs4QixLQUFLeEIsU0FHWk4sS0FBS2lELE1BQVFWLE9BQU9XLHNCQUFzQmxELEtBQUtNLE9BQU9LLEtBQUtYLE9BRzdESyxtQkFDRSxNQUFNOEMsRUFBUXRDLFNBQVN1QyxpQkFBaUIsS0FFeENDLEdBQUFBLENBQUtGLEdBQU9HLElBQ1ZBLEVBQUtDLFFBQVVDLElBRWJBLEVBQU1DLGlCQUVOLE1BQU0sS0FBRUMsR0FBU0osRUFDakJ0RCxLQUFLMkQsU0FBU0QsR0FFZHhCLFFBQVFDLElBQUlxQixFQUFNRSx3QkN4RzFCRSxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXl0aC8uL2FwcC9pbmRleC5qcyIsIndlYnBhY2s6Ly9teXRoL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCdcblxuaW1wb3J0IFByZWxvYWRlciBmcm9tICdjb21wb25lbnRzL1ByZWxvYWRlcidcblxuaW1wb3J0IEFib3V0IGZyb20gJ3BhZ2VzL0Fib3V0J1xuaW1wb3J0IE15dGhzIGZyb20gJ3BhZ2VzL015dGhzJ1xuaW1wb3J0IEhvbWUgZnJvbSAncGFnZXMvSG9tZSdcbmltcG9ydCBQb3N0IGZyb20gJ3BhZ2VzL1Bvc3QnXG5pbXBvcnQgRGV0YWlsIGZyb20gJ3BhZ2VzL0RldGFpbCdcbmltcG9ydCBKb3VybmFsIGZyb20gJ3BhZ2VzL0pvdXJuYWwnXG5cblxuXG5jbGFzcyBBcHAge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5jcmVhdGVQcmVsb2FkZXIoKVxuICAgIHRoaXMuY3JlYXRlQ29udGVudCgpXG4gICAgdGhpcy5jcmVhdGVQYWdlcygpXG5cbiAgICB0aGlzLmFkZExpc3RlbmVyc1xuICAgIHRoaXMuYWRkTGlua0xpc3RlbmVycygpXG5cbiAgICB0aGlzLnVwZGF0ZSgpXG4gIH1cblxuICBjcmVhdGVQcmVsb2FkZXIgKCkge1xuICAgIHRoaXMucHJlbG9hZGVyID0gbmV3IFByZWxvYWRlcigpXG4gICAgdGhpcy5wcmVsb2FkZXIub25jZSgnY29tcGxldGVkJywgdGhpcy5vblByZWxvYWRlZC5iaW5kKHRoaXMpKVxuICB9XG5cbiAgY3JlYXRlQ29udGVudCgpIHtcbiAgICB0aGlzLmNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRoaXMuY29udGVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGVtcGxhdGUnKVxuICB9XG5cbiAgY3JlYXRlUGFnZXMgKCkge1xuICAgIHRoaXMucGFnZXMgPSB7XG4gICAgICBhYm91dDogbmV3IEFib3V0KCksXG4gICAgICBkZXRhaWw6IG5ldyBEZXRhaWwoKSxcbiAgICAgIGhvbWU6IG5ldyBIb21lKCksXG4gICAgICBqb3VybmFsOiBuZXcgSm91cm5hbCgpLFxuICAgICAgbXl0aHM6IG5ldyBNeXRocygpLFxuICAgICAgcG9zdDogbmV3IFBvc3QoKVxuICAgIH1cblxuICAgIHRoaXMucGFnZSA9IHRoaXMucGFnZXNbdGhpcy50ZW1wbGF0ZV1cbiAgICB0aGlzLnBhZ2UuY3JlYXRlKClcbiAgfVxuXG4gIG9uUHJlbG9hZGVkICgpIHtcbiAgICB0aGlzLnByZWxvYWRlci5kZXN0cm95KClcbiAgICB0aGlzLnBhZ2Uuc2hvdygpXG4gICAgY29uc29sZS5sb2coJ1ByZWxvYWRlZCEnKVxuICB9XG5cbiAgYXN5bmMgb25DaGFuZ2UgKHVybCkge1xuXG4gICAgYXdhaXQgdGhpcy5wYWdlLmhpZGUoKVxuXG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IHdpbmRvdy5mZXRjaCh1cmwpXG5cbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgY29uc3QgaHRtbCA9IGF3YWl0IHJlcXVlc3QudGV4dCgpXG4gICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXG4gICAgICBkaXYuaW5uZXJIVE1MID0gaHRtbFxuXG4gICAgICBjb25zdCBkaXZDb250ZW50ID0gZGl2LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50JylcblxuICAgICAgdGhpcy50ZW1wbGF0ZSA9IGRpdkNvbnRlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRlbXBsYXRlJylcblxuICAgICAgdGhpcy5jb250ZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScsIHRoaXMudGVtcGxhdGUpXG4gICAgICB0aGlzLmNvbnRlbnQuaW5uZXJIVE1MID0gZGl2Q29udGVudC5pbm5lckhUTUxcblxuICAgICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlc1t0aGlzLnRlbXBsYXRlXVxuICAgICAgdGhpcy5wYWdlLmNyZWF0ZSgpXG4gICAgICB0aGlzLnBhZ2Uuc2hvdygpXG5cbiAgICAgIHRoaXMuYWRkTGlua0xpc3RlbmVycygpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdFcnJvcicpXG4gICAgfVxuXG4gIH1cblxuICB1cGRhdGUgKCkge1xuICAgIGlmICggdGhpcy5wYWdlICYmIHRoaXMucGFnZS51cGRhdGUgKSB7XG4gICAgICB0aGlzLnBhZ2UudXBkYXRlKClcbiAgICB9XG5cbiAgICB0aGlzLmZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKVxuICB9XG5cbiAgYWRkTGlua0xpc3RlbmVycyAoKSB7XG4gICAgY29uc3QgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhJylcblxuICAgIGVhY2gobGlua3MsIGxpbmsgPT4ge1xuICAgICAgbGluay5vbmNsaWNrID0gZXZlbnQgPT4ge1xuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBjb25zdCB7IGhyZWYgfSA9IGxpbmtcbiAgICAgICAgdGhpcy5vbkNoYW5nZShocmVmKVxuXG4gICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LGhyZWYpXG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuXG5uZXcgQXBwKClcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImIzYWM1OTE2ZjRlNmI2OTE2MTc0XCIpIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwidGhpcyIsImNyZWF0ZVByZWxvYWRlciIsImNyZWF0ZUNvbnRlbnQiLCJjcmVhdGVQYWdlcyIsImFkZExpc3RlbmVycyIsImFkZExpbmtMaXN0ZW5lcnMiLCJ1cGRhdGUiLCJwcmVsb2FkZXIiLCJQcmVsb2FkZXIiLCJvbmNlIiwib25QcmVsb2FkZWQiLCJiaW5kIiwiY29udGVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRlbXBsYXRlIiwiZ2V0QXR0cmlidXRlIiwicGFnZXMiLCJhYm91dCIsIkFib3V0IiwiZGV0YWlsIiwiRGV0YWlsIiwiaG9tZSIsIkhvbWUiLCJqb3VybmFsIiwiSm91cm5hbCIsIm15dGhzIiwiTXl0aHMiLCJwb3N0IiwiUG9zdCIsInBhZ2UiLCJjcmVhdGUiLCJkZXN0cm95Iiwic2hvdyIsImNvbnNvbGUiLCJsb2ciLCJ1cmwiLCJoaWRlIiwicmVxdWVzdCIsIndpbmRvdyIsImZldGNoIiwic3RhdHVzIiwiaHRtbCIsInRleHQiLCJkaXYiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiZGl2Q29udGVudCIsInNldEF0dHJpYnV0ZSIsImZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibGlua3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWFjaCIsImxpbmsiLCJvbmNsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImhyZWYiLCJvbkNoYW5nZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==