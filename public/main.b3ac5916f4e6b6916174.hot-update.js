/*! For license information please see main.b3ac5916f4e6b6916174.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatemyth("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),n=a.n(s),i=a("./app/components/Preloader.js"),o=a("./app/pages/About/index.js"),d=a("./app/pages/Myths/index.js"),p=a("./app/pages/Home/index.js"),r=a("./app/pages/Post/index.js"),h=a("./app/pages/Detail/index.js"),l=a("./app/pages/Journal/index.js");new class{constructor(){this.createPreloader(),this.createContent(),this.createPages(),this.addEventListeners(),this.addLinkListeners(),this.update()}createPreloader(){this.preloader=new i.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new o.default,detail:new h.default,home:new p.default,journal:new l.default,myths:new d.default,post:new r.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.page.show(),console.log("Preloaded!")}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),a=document.createElement("div");a.innerHTML=e;const s=a.querySelector(".content");this.template=s.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=s.innerHTML,this.page=this.pages[this.template],this.page.create(),this.page.show(),this.addLinkListeners()}else console.log("Error")}update(){this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}addEventListeners(){}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:a}=e;this.onChange(a),console.log(t,a)}}))}}}},(function(e){e.h=()=>"521b57ef05fe56af6133"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5iM2FjNTkxNmY0ZTZiNjkxNjE3NC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cVhBa0hBLElBckdBLE1BQ0VBLGNBQ0VDLEtBQUtDLGtCQUNMRCxLQUFLRSxnQkFDTEYsS0FBS0csY0FFTEgsS0FBS0ksb0JBQ0xKLEtBQUtLLG1CQUVMTCxLQUFLTSxTQUdQTCxrQkFDRUQsS0FBS08sVUFBWSxJQUFJQyxFQUFBQSxRQUNyQlIsS0FBS08sVUFBVUUsS0FBSyxZQUFhVCxLQUFLVSxZQUFZQyxLQUFLWCxPQUd6REUsZ0JBQ0VGLEtBQUtZLFFBQVVDLFNBQVNDLGNBQWMsWUFDdENkLEtBQUtlLFNBQVdmLEtBQUtZLFFBQVFJLGFBQWEsaUJBRzVDYixjQUNFSCxLQUFLaUIsTUFBUSxDQUNYQyxNQUFPLElBQUlDLEVBQUFBLFFBQ1hDLE9BQVEsSUFBSUMsRUFBQUEsUUFDWkMsS0FBTSxJQUFJQyxFQUFBQSxRQUNWQyxRQUFTLElBQUlDLEVBQUFBLFFBQ2JDLE1BQU8sSUFBSUMsRUFBQUEsUUFDWEMsS0FBTSxJQUFJQyxFQUFBQSxTQUdaN0IsS0FBSzhCLEtBQU85QixLQUFLaUIsTUFBTWpCLEtBQUtlLFVBQzVCZixLQUFLOEIsS0FBS0MsU0FHWnJCLGNBQ0VWLEtBQUtPLFVBQVV5QixVQUNmaEMsS0FBSzhCLEtBQUtHLE9BQ1ZDLFFBQVFDLElBQUksY0FHQSxlQUFFQyxTQUVScEMsS0FBSzhCLEtBQUtPLE9BRWhCLE1BQU1DLFFBQWdCQyxPQUFPQyxNQUFNSixHQUVuQyxHQUF1QixNQUFuQkUsRUFBUUcsT0FBZ0IsQ0FDMUIsTUFBTUMsUUFBYUosRUFBUUssT0FDckJDLEVBQU0vQixTQUFTZ0MsY0FBYyxPQUVuQ0QsRUFBSUUsVUFBWUosRUFFaEIsTUFBTUssRUFBYUgsRUFBSTlCLGNBQWMsWUFFckNkLEtBQUtlLFNBQVdnQyxFQUFXL0IsYUFBYSxpQkFFeENoQixLQUFLWSxRQUFRb0MsYUFBYSxnQkFBaUJoRCxLQUFLZSxVQUNoRGYsS0FBS1ksUUFBUWtDLFVBQVlDLEVBQVdELFVBRXBDOUMsS0FBSzhCLEtBQU85QixLQUFLaUIsTUFBTWpCLEtBQUtlLFVBQzVCZixLQUFLOEIsS0FBS0MsU0FDVi9CLEtBQUs4QixLQUFLRyxPQUVWakMsS0FBS0ssd0JBRUw2QixRQUFRQyxJQUFJLFNBS2hCN0IsU0FDT04sS0FBSzhCLE1BQVE5QixLQUFLOEIsS0FBS3hCLFFBQzFCTixLQUFLOEIsS0FBS3hCLFNBR1pOLEtBQUtpRCxNQUFRVixPQUFPVyxzQkFBc0JsRCxLQUFLTSxPQUFPSyxLQUFLWCxPQUc3REkscUJBSUFDLG1CQUNFLE1BQU04QyxFQUFRdEMsU0FBU3VDLGlCQUFpQixLQUV4Q0MsR0FBQUEsQ0FBS0YsR0FBT0csSUFDVkEsRUFBS0MsUUFBVUMsSUFFYkEsRUFBTUMsaUJBRU4sTUFBTSxLQUFFQyxHQUFTSixFQUNqQnRELEtBQUsyRCxTQUFTRCxHQUVkeEIsUUFBUUMsSUFBSXFCLEVBQU1FLHdCQzVHMUJFLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teXRoLy4vYXBwL2luZGV4LmpzIiwid2VicGFjazovL215dGgvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlYWNoIGZyb20gJ2xvZGFzaC9lYWNoJ1xuXG5pbXBvcnQgUHJlbG9hZGVyIGZyb20gJ2NvbXBvbmVudHMvUHJlbG9hZGVyJ1xuXG5pbXBvcnQgQWJvdXQgZnJvbSAncGFnZXMvQWJvdXQnXG5pbXBvcnQgTXl0aHMgZnJvbSAncGFnZXMvTXl0aHMnXG5pbXBvcnQgSG9tZSBmcm9tICdwYWdlcy9Ib21lJ1xuaW1wb3J0IFBvc3QgZnJvbSAncGFnZXMvUG9zdCdcbmltcG9ydCBEZXRhaWwgZnJvbSAncGFnZXMvRGV0YWlsJ1xuaW1wb3J0IEpvdXJuYWwgZnJvbSAncGFnZXMvSm91cm5hbCdcblxuXG5cbmNsYXNzIEFwcCB7XG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLmNyZWF0ZVByZWxvYWRlcigpXG4gICAgdGhpcy5jcmVhdGVDb250ZW50KClcbiAgICB0aGlzLmNyZWF0ZVBhZ2VzKClcblxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKVxuICAgIHRoaXMuYWRkTGlua0xpc3RlbmVycygpXG5cbiAgICB0aGlzLnVwZGF0ZSgpXG4gIH1cblxuICBjcmVhdGVQcmVsb2FkZXIgKCkge1xuICAgIHRoaXMucHJlbG9hZGVyID0gbmV3IFByZWxvYWRlcigpXG4gICAgdGhpcy5wcmVsb2FkZXIub25jZSgnY29tcGxldGVkJywgdGhpcy5vblByZWxvYWRlZC5iaW5kKHRoaXMpKVxuICB9XG5cbiAgY3JlYXRlQ29udGVudCgpIHtcbiAgICB0aGlzLmNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpXG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRoaXMuY29udGVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGVtcGxhdGUnKVxuICB9XG5cbiAgY3JlYXRlUGFnZXMgKCkge1xuICAgIHRoaXMucGFnZXMgPSB7XG4gICAgICBhYm91dDogbmV3IEFib3V0KCksXG4gICAgICBkZXRhaWw6IG5ldyBEZXRhaWwoKSxcbiAgICAgIGhvbWU6IG5ldyBIb21lKCksXG4gICAgICBqb3VybmFsOiBuZXcgSm91cm5hbCgpLFxuICAgICAgbXl0aHM6IG5ldyBNeXRocygpLFxuICAgICAgcG9zdDogbmV3IFBvc3QoKVxuICAgIH1cblxuICAgIHRoaXMucGFnZSA9IHRoaXMucGFnZXNbdGhpcy50ZW1wbGF0ZV1cbiAgICB0aGlzLnBhZ2UuY3JlYXRlKClcbiAgfVxuXG4gIG9uUHJlbG9hZGVkICgpIHtcbiAgICB0aGlzLnByZWxvYWRlci5kZXN0cm95KClcbiAgICB0aGlzLnBhZ2Uuc2hvdygpXG4gICAgY29uc29sZS5sb2coJ1ByZWxvYWRlZCEnKVxuICB9XG5cbiAgYXN5bmMgb25DaGFuZ2UgKHVybCkge1xuXG4gICAgYXdhaXQgdGhpcy5wYWdlLmhpZGUoKVxuXG4gICAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IHdpbmRvdy5mZXRjaCh1cmwpXG5cbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgY29uc3QgaHRtbCA9IGF3YWl0IHJlcXVlc3QudGV4dCgpXG4gICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXG4gICAgICBkaXYuaW5uZXJIVE1MID0gaHRtbFxuXG4gICAgICBjb25zdCBkaXZDb250ZW50ID0gZGl2LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50JylcblxuICAgICAgdGhpcy50ZW1wbGF0ZSA9IGRpdkNvbnRlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRlbXBsYXRlJylcblxuICAgICAgdGhpcy5jb250ZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10ZW1wbGF0ZScsIHRoaXMudGVtcGxhdGUpXG4gICAgICB0aGlzLmNvbnRlbnQuaW5uZXJIVE1MID0gZGl2Q29udGVudC5pbm5lckhUTUxcblxuICAgICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlc1t0aGlzLnRlbXBsYXRlXVxuICAgICAgdGhpcy5wYWdlLmNyZWF0ZSgpXG4gICAgICB0aGlzLnBhZ2Uuc2hvdygpXG5cbiAgICAgIHRoaXMuYWRkTGlua0xpc3RlbmVycygpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdFcnJvcicpXG4gICAgfVxuXG4gIH1cblxuICB1cGRhdGUgKCkge1xuICAgIGlmICggdGhpcy5wYWdlICYmIHRoaXMucGFnZS51cGRhdGUgKSB7XG4gICAgICB0aGlzLnBhZ2UudXBkYXRlKClcbiAgICB9XG5cbiAgICB0aGlzLmZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKVxuICB9XG5cbiAgYWRkRXZlbnRMaXN0ZW5lcnMgKCkge1xuXG4gIH1cblxuICBhZGRMaW5rTGlzdGVuZXJzICgpIHtcbiAgICBjb25zdCBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2EnKVxuXG4gICAgZWFjaChsaW5rcywgbGluayA9PiB7XG4gICAgICBsaW5rLm9uY2xpY2sgPSBldmVudCA9PiB7XG5cbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuXG4gICAgICAgIGNvbnN0IHsgaHJlZiB9ID0gbGlua1xuICAgICAgICB0aGlzLm9uQ2hhbmdlKGhyZWYpXG5cbiAgICAgICAgY29uc29sZS5sb2coZXZlbnQsaHJlZilcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG5cbm5ldyBBcHAoKVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNTIxYjU3ZWYwNWZlNTZhZjYxMzNcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJ0aGlzIiwiY3JlYXRlUHJlbG9hZGVyIiwiY3JlYXRlQ29udGVudCIsImNyZWF0ZVBhZ2VzIiwiYWRkRXZlbnRMaXN0ZW5lcnMiLCJhZGRMaW5rTGlzdGVuZXJzIiwidXBkYXRlIiwicHJlbG9hZGVyIiwiUHJlbG9hZGVyIiwib25jZSIsIm9uUHJlbG9hZGVkIiwiYmluZCIsImNvbnRlbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZW1wbGF0ZSIsImdldEF0dHJpYnV0ZSIsInBhZ2VzIiwiYWJvdXQiLCJBYm91dCIsImRldGFpbCIsIkRldGFpbCIsImhvbWUiLCJIb21lIiwiam91cm5hbCIsIkpvdXJuYWwiLCJteXRocyIsIk15dGhzIiwicG9zdCIsIlBvc3QiLCJwYWdlIiwiY3JlYXRlIiwiZGVzdHJveSIsInNob3ciLCJjb25zb2xlIiwibG9nIiwidXJsIiwiaGlkZSIsInJlcXVlc3QiLCJ3aW5kb3ciLCJmZXRjaCIsInN0YXR1cyIsImh0bWwiLCJ0ZXh0IiwiZGl2IiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImRpdkNvbnRlbnQiLCJzZXRBdHRyaWJ1dGUiLCJmcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImxpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImVhY2giLCJsaW5rIiwib25jbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJocmVmIiwib25DaGFuZ2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=